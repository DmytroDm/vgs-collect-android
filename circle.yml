version: 2.1
aliases:
  - &restore_gem_cache
    name: Restore cache
    keys:
      - jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  - &save_gem_cache
    name: Saving cache
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    paths:
      - ~/.gradle

  - &attach_workspace
    attach_workspace:
      at: ~/code

  - &download_dep
    - checkout
    - *attach_workspace
    - run:
        name: Download Dependencies
        command: |
          sudo chmod +x gradlew
          ./gradlew androidDependencies

  - &run_lint
    - checkout
    - *attach_workspace
    - restore_cache: *restore_gem_cache
    - run:
        name: Run Lint
        command: ./gradlew lintDebug
    - save_cache: *save_gem_cache

  - &run_unit_tests
    - checkout
    - *attach_workspace
    - run:
        name: Run Unit Tests
        command: ./gradlew testDebugUnitTest

  - &run_ui_tests
    - *attach_workspace
    - run:
        name: Lists installed targets
        command: android list target
    - run:
        name: List available targets and other sdk modules
        command: sdkmanager --list --include_obsolete --verbose
    - run:
        name: setup 1
        command: if [ ! -e /usr/local/android-sdk-linux/build-tools/29.0.3 ]; then echo y | android update sdk --all --no-ui --filter "build-tools-29.0.3"; fi;
    - run:
        name: setup 2
        command: if [ ! -e /usr/local/android-sdk-linux/platforms/android-29 ]; then echo y | android update sdk --all --no-ui --filter "android-29"; fi;
    - run:
        name: setup 3
        command: if ! $(grep -q "Revision=28.1.9" /usr/local/android-sdk-linux/extras/android/m2repository/source.properties); then echo y | android update sdk --all --no-ui --filter "extra-android-m2repository"; fi;
    #    - run:
    #        name: Create avd
    #        command: if [ ! -d '/usr/local/android-sdk-linux/platforms/android-25' ]; then echo y | android update sdk --no-ui --all --filter 'android-25,build-tools-25.0.3, extra-android-m2repository, extra-android-support,extra-google-google_play_services, extra-google-m2repository'; fi
    - run:
        name: Start emulator
        #        if [ ! -d '/usr/local/android-sdk-linux/platforms/android-25' ];
        #           then echo y | android update sdk --no-ui --all --filter 'android-25,build-tools-25.0.3,
        #                  extra-android-m2repository, extra-android-support,extra-google-google_play_services, extra-google-m2repository'; fi
        command: emulator -avd arm -no-audio -no-window -gpu off &
    - checkout
    - run:
        name: Wait for emulator
        command: circle-android wait-for-boot
    - run:
        name: Remove lock screen
        command: adb shell input keyevent 82
    - run:
        name: Prepare UI Tests
        command: ./gradlew connectedAndroidTest -PdisablePreDex



  - &assembleDebug
    - checkout
    - *attach_workspace
    - run:
        name: Build Debug
        command: ./gradlew assembleDebug
    - store_artifacts:
        path: app/build/outputs/apk/debug/app-debug.apk
        destination: app-debug.apk

  - &deployToBintray
    - checkout
    - *attach_workspace
    - run:
        name: Install
        command: ./gradlew install
    - run:
        name: Bintray Upload
        command: ./gradlew bintrayUpload


  - &instrumental_test_environment
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      TEST_FLAGS: "--configure-on-demand -PdisablePreDex"
  - &deploy_environment
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
  - &test_environment
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29


  # dependency groups
  - &prepare_sources
    - "Prepared_Sources"

  - &all_test
    - "Run_Lint"
    - "Run_Unit_Tests"

  - &debug_build
    - "Assemble_Debug_Build"

jobs:
  "Prepared_Sources":
    <<: *test_environment
    environment:
      JVM_OPTS: -Xmx3200m
    steps: *download_dep

  "UI_RUN":
    <<: *instrumental_test_environment
    environment:
      JVM_OPTS: -Xmx3200m
    steps: *run_ui_tests

  "Run_Lint":
    <<: *test_environment
    environment:
      JVM_OPTS: -Xmx3200m
    steps: *run_lint

  "Run_Unit_Tests":
    <<: *test_environment
    environment:
      JVM_OPTS: -Xmx3200m
    steps: *run_unit_tests

  "Assemble_Debug_Build":
    <<: *test_environment
    environment:
      JVM_OPTS: -Xmx3200m
    steps: *assembleDebug

  "Deploy_to_Bintray":
    <<: *test_environment
    environment:
      JVM_OPTS: -Xmx3200m
    steps: *deployToBintray



workflows:
  version: 2.1
  main:
    jobs:
      - "Prepared_Sources":
          filters:
            branches:
              only:
                - master
                - stage
                - develop
                - bug/ch77108
      - "Run_Lint":
          requires:
            *prepare_sources
          filters:
            branches:
              only:
                - master
                - stage
      - "UI_RUN":
          requires:
            *prepare_sources
          filters:
            branches:
              only:
                - master
                - stage
                - develop
                - bug/ch77108
      - "Run_Unit_Tests":
          requires:
            *prepare_sources
          filters:
            branches:
              only:
                - master
                - stage
                - develop
      - "Assemble_Debug_Build":
          requires:
            *all_test
          filters:
            branches:
              only:
                - master
                - stage
#      - "Deploy to Bintray":
#          requires:
#            *debug_build
#          filters:
#            branches:
#              only:
#                - master

